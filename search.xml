<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何直接在chrome浏览器网页上高亮文本内容？</title>
    <url>/2020/09/07/chrome-highlight/</url>
    <content><![CDATA[<p>写东西的时候经常会在网页上看到一些有用的内容 但通常会打开好几个标签页好几千字 竟然在开始动笔的时候就找不到需要的那段话去哪儿了 经过一番寻找和对比（主要是对比Diigo和CollaMark），最终发现了 <a href="https://link.jianshu.com/?t=https://chrome.google.com/webstore/detail/pdf-markup-my-web-markups/cbjngbfjehiofmihfpodinolkcokdojp">Markup</a> 拓展是我想要的那一款！</p>
<p>优势：</p>
<ul>
<li><p>标注后网页高亮</p>
</li>
<li><p>页面旁同时也有一个个内容标签</p>
</li>
<li><p>主页里留有标注的出处网址</p>
</li>
</ul>
<p>方法：</p>
<ol>
<li><p>点击上面的链接 将markup加载自己的拓展里<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiaxny04yg30xc0h44nr.gif" alt="9808904-e43e1bdaa2048e9d"></p>
</li>
<li><p>进入markup官网注册<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiaxtbs4wg30xc0h4n1g.gif" alt="9808904-10285bc0ed9fae83"></p>
</li>
<li><p>注册之后进入 看到的这些内容都是其他人标注的内容 不用管这些 把它关掉 就可以愉快的开始标注啦<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiay0r90rg30xc0h4dm6.gif" alt="9808904-879b9225b7c3256e"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>pages</tag>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/05/hello-world/</url>
    <content><![CDATA[<p>作为一个只学过一点python的小白，终于！经过两天的倒腾，终于搞定了这个个人网页！呱唧呱唧喜大普奔！</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo 优化 II</title>
    <url>/2020/09/07/hexo-2/</url>
    <content><![CDATA[<h1 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h1><p>我来打脸了，用了两天突然发现 tags 还是挺实用的，所以又来设置标签页了……</p>
<p>增加标签页面，会生成一个 source/tags/index.md 文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>打开后在title下面增加两行。</p>
<pre><code>type: tags
comments: false</code></pre>
<p>然后在主题的 _config.yml 文件里，在menu里打开tags就可以啦。</p>
<pre><code>tags: /tags/ || fa fa-tags</code></pre>
<h1 id="阅读全文"><a href="#阅读全文" class="headerlink" title="阅读全文"></a>阅读全文</h1><p>原来 Next 的老版本中能够自动节选文章开头作为摘录放到首页，然后有点击阅读更多的按钮，但是在最新版本中 Hexo 的开发者们把这个功能去掉了，所以现在如果想节选摘录的话主要有两种方法。</p>
<h2 id="1-手动分割"><a href="#1-手动分割" class="headerlink" title="1. 手动分割"></a>1. 手动分割</h2><p>这是 Hexo 内置的方式，在每篇文章想要截取的位置写入一下代码，之后首页就会自动截取。</p>
<pre><code>&lt;!-- more --&gt;</code></pre>
<h2 id="2-安装插件"><a href="#2-安装插件" class="headerlink" title="2. 安装插件"></a>2. 安装插件</h2><p>向我这种懒人，实在是懒得每篇都加，写着写着很可能忘了不说，看着自己写的我总是拿不准要在哪里截比较好，好像哪里都怪怪的，还是觉着这种事交给机器做比较好。</p>
<p>安装插件。</p>
<pre><code>npm install hexo-excerpt --save    </code></pre>
<p>然后就可以了，不过我自己觉着默认的摘录还是内容有点多，想改一下设置，就去 Hexo Program 的_config.yml 里加了两行。</p>
<pre><code>excerpt:
  depth: 5 #截取的数量 默认是10
  excerpt_excludes: []
  more_excludes: []
  hideWholePostExcerpts: true</code></pre>
<h1 id="更改字体"><a href="#更改字体" class="headerlink" title="更改字体"></a>更改字体</h1><p>更改字体</p>
<p>Hexo Next 毕竟是以英文为主进行开发的，对中文字体的挑选肯定就没有英文那么好，所以我就想自己修改一下字体。</p>
<p>进入主题的_config.yml 配置文件，找到 fonts 部分把字体部分功能打开。</p>
<pre><code>font:
  enable: true</code></pre>
<p>进行修改，可以自己在 Google Fonts 里找到喜欢的字体，然后加到想改的部分（标题、正文、全局……）</p>
<pre><code>global: #修改全局字体
  external: true
  family: Noto Serif SC
  size:

title: #修改标题字体
  external: true
  family: 
  size:

headings: #修改文章里的小标题字体
  external: true
  family: Noto Serif SC
  size:

posts: #修改文章内容
  external: true
  family:

codes: #修改代码块字体
  external: true
  family:</code></pre>
<h1 id="添加阅读量统计和评论功能"><a href="#添加阅读量统计和评论功能" class="headerlink" title="添加阅读量统计和评论功能"></a>添加阅读量统计和评论功能</h1><p>Next 里提供了两种阅读量统计的功能——valine 和 LeanCloud，但是实际上两个都是依托于 LeanCloud，所以我们首先需要注册 <a href="https://www.leancloud.cn/">LeanCloud</a> 账户，注册后创建应用，</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gii9htwgh2j31fe0sm0xj.jpg" alt="valine-01"></p>
<p>创建应用后进入应用，分别创建名为 Comment 和 Counter 的两个 class。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gii9xd5e83j319w0u0do5.jpg" alt="valine-02"></p>
<p>创建后，进入 设置-应用Keys，记下来 AppID 和 APPKey，填入主题的_config.yml 相应的位置。</p>
<pre><code>valine:
  enable: true #打开
  appid: # 填入appid
  appkey: # 填入appkey
  placeholder: Just go go #默认评论栏里是什么字
  language: zh-cn # 设置一下语言
  visitor: true # 打开
  comment_count: true #打开阅读次数技术</code></pre>
<p>打开 <a href="https://www.jsdelivr.com/package/npm/valine">valine</a> 网页，找到最新版的地址。</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gii9pzkjkaj31pb0u0n4x.jpg" alt="valine-03"></p>
<p>填写进主题的_config.yml 相应位置。</p>
<pre><code># Valine
  # valine: //cdn.jsdelivr.net/npm/valine@1/dist/Valine.min.js
  # valine: //cdnjs.cloudflare.com/ajax/libs/valine/1.3.10/Valine.min.js
  valine: https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/Valine.min.js</code></pre>
<p>进入 Hexo 的_config.yml ，URL一栏填入你的网站地址。</p>
<pre><code># URL
## If your site is put in a subdirectory, set url as &#39;http://example.com/child&#39; and root as &#39;/child/&#39;
url: #填这里</code></pre>
<p>现在已经基本大功告成啦，但是现在评论那里显示的是「valine:0」而不是「评论数：0」，需要我们手动更改一下。</p>
<p>进入 themes/next/languages/zh-CN.yml，在post下面添加一行：</p>
<pre><code>comments.valine: 评论数</code></pre>
<p>就可以啦。</p>
<p>对了，开启评论之后默认的是所有文章都会开启，想不开启的话（比如分类页和标签页的index）要在文章最开头写title的那里写上。</p>
<pre><code>comments: false</code></pre>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Academia 配置</title>
    <url>/2020/09/07/hexo-academia/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li><p>一个已经搭建在Github Pages上的Hexo网站</p>
<p>如果没有的话可以按照<a href="https://whitelephantee.github.io/2020/09/05/hexo-building/">这个链接</a>里进行搭建。</p>
</li>
<li><p>git 和 npm</p>
</li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>下载配置文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PhosphorW/hexo-theme-academia.git themes/Academia</span><br></pre></td></tr></table></figure>

<p>下载需要的插件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p>在项目的 _config.yml 中找到 theme 一栏并进行更改。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p>##主题配置</p>
<p>打开 themes 的 _config.yml（注意不是 hexo project 的 _config.yml ）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">open _config.yml</span><br></pre></td></tr></table></figure>

<p>个人信息配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">author: <span class="comment">#个人姓名</span></span><br><span class="line">author_bio: <span class="comment">#个人简介</span></span><br><span class="line">avatar: /img/avatar.jpg <span class="comment">#个人头像 默认是小灰人 可以通过在/themes/Academia/source/img/avatar.jpg 替换添加</span></span><br><span class="line"><span class="comment"># if author sets in hexo_config, this string doesn&#x27;t work</span></span><br></pre></td></tr></table></figure>

<p>顶部菜单栏设置，默认提供 Publications，About 和 Blog，可以页内跳转也可以添加外链</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Publications: /<span class="comment">#Publications #页内跳转</span></span><br><span class="line">  About: /</span><br><span class="line">  Blog: https://phower.me <span class="comment">#添加外链</span></span><br></pre></td></tr></table></figure>

<p>添加社交信息，附带小图标，不需要的或不想展示的可以注释掉，或者直接关掉。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">#不想展示可以关掉</span></span><br><span class="line">social_links:</span><br><span class="line">  fab fa-twitter: /</span><br><span class="line">  fab fa-facebook-square: /</span><br><span class="line">  fab fa-github: /</span><br><span class="line">  fab fa-stack-overflow: /</span><br><span class="line">  fab fa-linkedin: /</span><br><span class="line">  fab fa-weibo: /</span><br><span class="line">  fab fa-weixin: /</span><br><span class="line">  fab fa-qq: /</span><br><span class="line">  fas fa-envelope: / <span class="comment">#E-mail</span></span><br><span class="line">  fas fa-rss: /  <span class="comment">#rss</span></span><br><span class="line">  </span><br><span class="line">e_social:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">#额外社交链接</span></span><br><span class="line">e_social_links:</span><br><span class="line">  Google Scholar: / || fas fa-graduation-cap</span><br><span class="line">  ORCID: / || fab fa-orcid</span><br></pre></td></tr></table></figure>

<p>可以添加个人简历，可以通过在/themes/Academia/source/attaches/CV.pdf 替换添加。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cv_dl:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  dir: /attaches/CV.pdf</span><br><span class="line">  description: My Detail CV.</span><br></pre></td></tr></table></figure>

<h1 id="编辑主页"><a href="#编辑主页" class="headerlink" title="编辑主页"></a>编辑主页</h1><p>新建文章。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n post <span class="string">&quot;any title&quot;</span></span><br></pre></td></tr></table></figure>

<p>去到 hexo project 的/source/_posts 中就能找到名称相同的 markdown 文档，里面有几行内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Public <span class="comment">#标题</span></span><br><span class="line">date: 2020-09-07 15:45:51 <span class="comment">#创建日期</span></span><br><span class="line">tags: <span class="comment">#标签 在 Academia 风格下不提供标签 所以无效</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>在文首加上 academia: true，才会被 academia 显示出来。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Public <span class="comment">#标题</span></span><br><span class="line">date: 2020-09-07 15:45:51 <span class="comment">#创建日期</span></span><br><span class="line">tags: <span class="comment">#标签 在 Academia 风格下不提供标签 所以无效</span></span><br><span class="line">academia: <span class="literal">true</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>然后就可以在上面写想写的内容啦。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Public <span class="comment">#标题</span></span><br><span class="line">date: 2020-09-07 15:45:51 <span class="comment">#创建日期</span></span><br><span class="line">tags: <span class="comment">#标签 在 Academia 风格下不提供标签 所以无效</span></span><br><span class="line">academia: <span class="literal">true</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">在这里用 markdown 语法写任意想写的内容。</span><br></pre></td></tr></table></figure>

<h1 id="编辑其他页"><a href="#编辑其他页" class="headerlink" title="编辑其他页"></a>编辑其他页</h1><p>我这里以 Publications 页为例。现在只在标题栏中有  Publications，但是实际后段文档中并没有，所以我们需要先添加一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n post <span class="string">&quot;Publications&quot;</span>  </span><br></pre></td></tr></table></figure>

<p>然后系统就会在/source 里新增一个同名文件夹，同时文件夹里有一个 index.md. 直接打开然后和之前一样编辑就好啦。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /<span class="built_in">source</span>/Publications</span><br><span class="line">open index.md</span><br></pre></td></tr></table></figure>

<p>编辑完成之后要在 Academia 的  _config.yml 文件中链接一下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Publications: /Publications</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + Github Pages 搭建个人网站</title>
    <url>/2020/09/05/hexo-building/</url>
    <content><![CDATA[<p>作为一名基本不会编程只学了一阵python的真·小白，记录一下探索的过程～</p>
<h1 id="Github新建项目"><a href="#Github新建项目" class="headerlink" title="Github新建项目"></a>Github新建项目</h1><p>在 GitHub 新建一个仓库（Repository），然后去到 Settings，开启Github Pages，成功后就会提示你可以在https://{username}.github.io/{Repository Name}/中进行发布。</p>
<p>比如我的github username是whitelephantee，如果我建一个叫做YujiaZhou的Repository，开启Github Pages后就能在<a href="https://whitelephantee.github.io/YujiaZhou/%E5%8F%91%E5%B8%83%EF%BC%8C">https://whitelephantee.github.io/YujiaZhou/发布，</a></p>
<p>一个特殊的Repository名是{username.github.io}，如果命名为这个的话Github就会自动合并。比如我（GitHub用户名是whitelephantee）把个人主页的Repository命名为whitelephantee.github.io的话，我的域名就不是<a href="https://whitelephantee.github.io/whitelephantee.github.io/%EF%BC%8C%E8%80%8C%E6%98%AFhttps://whitelephantee.github.io/%E3%80%82">https://whitelephantee.github.io/whitelephantee.github.io/，而是https://whitelephantee.github.io/。</a></p>
<p>新建完成之后就可以进行后续操作了。</p>
<h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>首先在自己的电脑上安装 Node.js，下载地址：<a href="https://nodejs.org/zh-cn/download/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%AE%89%E8%A3%85">https://nodejs.org/zh-cn/download/，可以安装</a> Stable 版本。</p>
<p>安装成功后可以在terminal输入以下代码进行确认，如果返回版本号的话就安装成功啦。</p>
<pre><code>node -v
npm -v</code></pre>
<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>Hexo就是我们要用来搭建博客的平台。</p>
<p>注意一定要有sudo，我看网上的教程都没有sudo，但我实际操作中没有sudo就不行诶。</p>
<pre><code>sudo npm install -g hexo-cli</code></pre>
<h1 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h1><p>创建项目。</p>
<pre><code>hexo init &#123;name&#125;
cd &#123;name&#125;
npm install</code></pre>
<p>这里面的 {name} 就是我们想给这个个人主页起的名称，比如我就起了whitelephantee。</p>
<pre><code>hexo init whitelephantee
cd whitelephantee
npm install</code></pre>
<p>然后可以确认一下里面的文档。</p>
<pre><code>ls</code></pre>
<p>预览一下</p>
<pre><code>hexo s</code></pre>
<p>出现这个就说明成功了，可以在浏览器里输入<a href="http://localhost:4000看一下就可以，这是Hexo的默认界面，之后等连接上Github之后可以再修改。">http://localhost:4000看一下就可以，这是Hexo的默认界面，之后等连接上Github之后可以再修改。</a></p>
<pre><code> Hexo is running at http://localhost:4000 . Press Ctrl+C to stop</code></pre>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gifvhmss82j31c00u0e81.jpg" alt="截屏2020-09-05 下午4.51.13"></p>
<p>预览好之后就可以按ctrl+c结束预览，然后进入下一步。</p>
<h1 id="链接Github"><a href="#链接Github" class="headerlink" title="链接Github"></a>链接Github</h1><h2 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h2><p>首先看一下自己本身有没有SSH Key，如果没有报错的话就说明有SSH Key。</p>
<pre><code>cd ~/.ssh</code></pre>
<p>有的话直接查看一下。</p>
<pre><code>cat ~/.ssh/id_rsa.pub</code></pre>
<p>就算有的话还要再确认一下并添加主机到本机SSH可信列表。如果返回Hi xxx! You are successfully authenticated, but Github does not provide shell access. 的话就对啦，如果显示Permission denied(public key)的话，则表明需要重新生成SSH Key。</p>
<pre><code>ssh -T git@github.com</code></pre>
<p>无论是没有还是需要重新生成都可以参考这个。</p>
<p><a href="https://docs.github.com/en/github/authenticating-to-github/error-permission-denied-publickey">Github Docs: Error: Permission denied (public key)</a> 里 <a href="https://docs.github.com/en/github/authenticating-to-github/error-permission-denied-publickey#make-sure-you-have-a-key-that-is-being-used">Make sure you have a key that is being used</a> 部分，并按照指示 <a href="https://docs.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account">新增SSH Key</a> 并 <a href="https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">添加到Github中</a></p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>打开_config.yml 文件</p>
<pre><code>cd &#123;name&#125;
open _config.yml</code></pre>
<p>找到 Deployment 这个地方，更改一下deploy这个地方，中间repo这个链接打开应该是Github里Respository的链接，修改完保存。</p>
<pre><code>deploy:
  type: git
  repo: https://github.com/&#123;Repository Name&#125;/&#123;Project Name&#125;
  branch: master</code></pre>
<p>安装一个插件。</p>
<pre><code>npm install hexo-deployer-git --save</code></pre>
<p>之后进行部署，如果最后一行返回 INFO  Deploy done: git 就说明好啦。</p>
<pre><code>hexo g -d</code></pre>
<p>我们可以去 Github Pages 看一眼，比如我回到 <a href="https://whitelephantee.github.io/">https://whitelephantee.github.io/</a> 看一下就能够看到和原来在localhost上的预览界面一样的界面啦。</p>
<h1 id="部署网页"><a href="#部署网页" class="headerlink" title="部署网页"></a>部署网页</h1><p>虽然现在链接好了，但是个人网页里面的内容都还没有调整。</p>
<h2 id="更改基本信息"><a href="#更改基本信息" class="headerlink" title="更改基本信息"></a>更改基本信息</h2><p>继续打开_config.yml 文件</p>
<pre><code>open _config.yml</code></pre>
<p>找到 site 部分</p>
<pre><code>title: 小白象 #个人网页名称
subtitle: whitelephantee #副标题
description: 小白象的个人主页 想到什么写什么 #描述
keywords: #关键词
author: whitelephantee #作者
language: zh-CN #语言,默认的是en英语，我打算写中文的居多所以改成中文</code></pre>
<h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>Hexo 的主题就有很多，默认的是 landscape，其他得主题可以在 <a href="https://hexo.io/themes/">Hexo Theme</a> 里进行预览，找到心仪的之后下载下来，比如我下载了 next 主题。</p>
<pre><code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre>
<p>在_config.yml 里找到 theme 部分，进行更改。</p>
<pre><code>theme: next</code></pre>
<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>进入主题的_config.yml 文件（注意不是 project 的 _config.yml 文件），按自己的喜好进行一下更改和调整，还是以我的为例。</p>
<pre><code>cd themes
cd next
open _config.yml</code></pre>
<p>Minify：自动删除不必要的文件</p>
<pre><code>minify: true</code></pre>
<p>footer - icon：在最下面作者和年份默认会有一个心形小图标，我想换成一个大象的图标。</p>
<pre><code>icon:
    # Icon name in Font Awesome. See: https://fontawesome.com/icons
    name: fa fa-elephant
    # If you want to animate the icon, set it to true.
    animated: false
    # Change the color of icon, using Hex Code.
    color: &quot;#000000&quot;</code></pre>
<p>scheme：next一共提供了4种样式，默认是Muse，我选择了Pisces。</p>
<pre><code>scheme: Pisces</code></pre>
<p>Menu: 默认的标签栏只有主页和归档页，但hexo还提供了一些备选项，包括标签页、分类页等，可以按需开启。</p>
<pre><code>menu:
  home: / || fa fa-home
  #about: /about/ || fa fa-user
  tags: /tags/ || fa fa-tags
  categories: /categories/ || fa fa-th
  archives: /archives/ || fa fa-archive
  schedule: /schedule/ || fa fa-calendar
  sitemap: /sitemap.xml || fa fa-sitemap
  #commonweal: /404/ || fa fa-heartbeat</code></pre>
<p>avatar：小头像，把目标图片文件放到 themes/next/source/images/avatar.JPG 路径，然后再在主题的_config.yml 文件中进行更改。</p>
<pre><code>avatar:
  # Replace the default image and set the url here.
  url: /images/avatar.JPG
  # If true, the avatar will be dispalyed in circle.
  rounded: true
  # If true, the avatar will be rotated with the cursor.
  rotated: false</code></pre>
<p>Pangu: 这是一个神器的选项，专门针对强迫症患者，在编译生成页面的时候，中英文之间就会自动添加空格。</p>
<pre><code>pangu: true</code></pre>
<h1 id="内容构建"><a href="#内容构建" class="headerlink" title="内容构建"></a>内容构建</h1><h2 id="更改第一篇内容"><a href="#更改第一篇内容" class="headerlink" title="更改第一篇内容"></a>更改第一篇内容</h2><p>预览的内容还算符合想法，但是主页的第一篇默认为 Hello World，想改成自己的内容。</p>
<p>首先打开/source/_posts/hello-world.md</p>
<pre><code>cd source/_posts
open hello-world.md</code></pre>
<p>然后进行编辑就好啦，hexo和github一样，默认的都是用Markdown语法写作，很简单的一学就会。</p>
<pre><code>---
title: #标题
---

# 一级标题
## 二级标题

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#代码块</span><br></pre></td></tr></table></figure>

[Name](Link) #链接</code></pre>
<h2 id="新建一篇文章"><a href="#新建一篇文章" class="headerlink" title="新建一篇文章"></a>新建一篇文章</h2><p>新建一篇文章的话还是在终端中。</p>
<pre><code>hexo new &#123;name&#125;</code></pre>
<p>然后就像上面更改一样进行写作就好啦，最上面写上时间、标题等。</p>
<pre><code>---
title: 标题 
date: 日期 # 自动创建，如 2019-08-22 11:47:21
tags: 
- 标签1
- 标签2
- 标签3
categories:
- 分类1
- 分类2
---</code></pre>
<h2 id="增加分类页"><a href="#增加分类页" class="headerlink" title="增加分类页"></a>增加分类页</h2><p>因为我不太喜欢标签的管理方式，所以我就只开了分类页，标签页的方式和分类页相似。</p>
<p>增加分类页面，会生成一个 source/categories/index.md 文件。</p>
<pre><code>hexo new page categories</code></pre>
<p>打开后在title下面增加两行。</p>
<pre><code>type: categories
comments: false</code></pre>
<p>然后在主题的 _config.yml 文件里，在menu里打开categories就可以啦。</p>
<pre><code>categories: /categories/ || th</code></pre>
<h2 id="增加搜索页"><a href="#增加搜索页" class="headerlink" title="增加搜索页"></a>增加搜索页</h2><p>增加一个网站内内容的搜索功能。</p>
<p>安装一个hexo-generator-searchdb插件。</p>
<pre><code>npm install hexo-generator-searchdb --save</code></pre>
<p>在项目的 _config.yml 文件里添加search选项。</p>
<pre><code>search:
  path: search.xml
  field: post
  format: html
  limit: 10000</code></pre>
<p>然后在主题的 _config.yml 里面也修改一下。</p>
<pre><code>local_search:
  enable: true
  # If auto, trigger search by changing input.
  # If manual, trigger search by pressing enter key or search button.
  trigger: auto
  # Show top n results per article, show all results by setting to -1
  top_n_per_article: 5
  # Unescape html strings to the readable one.
  unescape: false
  # Preload the search data when the page loads.
  preload: false</code></pre>
<h2 id="添加字数统计和阅读时长"><a href="#添加字数统计和阅读时长" class="headerlink" title="添加字数统计和阅读时长"></a>添加字数统计和阅读时长</h2><p>首先安装一个插件。</p>
<pre><code>npm install hexo-symbols-count-time --save</code></pre>
<p>在项目的 _config.yml 文件里添加。</p>
<pre><code>symbols_count_time:
  symbols: true
  time: true
  total_symbols: true
  total_time: true
  exclude_codeblock: false
  awl: 4
  wpm: 300
  suffix: &quot;mins.&quot;</code></pre>
<p>然后在主题的 _config.yml 里面也修改一下。</p>
<pre><code>symbols_count_time:
  separated_meta: true
  item_text_post: true
  item_text_total: false</code></pre>
<h2 id="增加动态背景"><a href="#增加动态背景" class="headerlink" title="增加动态背景"></a>增加动态背景</h2><p>切换到Next主题文件夹</p>
<pre><code>cd themes/next</code></pre>
<p>安装模块</p>
<pre><code>git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</code></pre>
<p>修改主题的 _config.yml </p>
<pre><code># Canvas-nest
# Dependencies: https://github.com/theme-next/theme-next-canvas-nest
canvas_nest:
  enable: true
  onmobile: true # 是否在手机上显示
  color: &quot;255,51,51&quot; # RGB颜色设置
  opacity: 0.5 # 线条透明度
  zIndex: -1 # 显示级别
  count: 160 # 线条的数量，越多越卡</code></pre>
<h1 id="Final-Touch"><a href="#Final-Touch" class="headerlink" title="Final Touch"></a>Final Touch</h1><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>设置了那么多，效果如何呢？让我们先在本地预览一下。</p>
<pre><code>hexo s</code></pre>
<h2 id="更新Github-Page"><a href="#更新Github-Page" class="headerlink" title="更新Github Page"></a>更新Github Page</h2><p>可以直接在终端中运行。</p>
<pre><code>hexo clean
hexo generate
hexo deploy</code></pre>
<p>为了方便，我直接创建了一个脚本文件，这样以后每次更新就只用输入一行就可以了。</p>
<p>创建创建脚本文件。</p>
<pre><code>touch deploy.sh
chmod 755 deploy.sh
./deploy.sh</code></pre>
<p>将文本打开并写入内容，然后执行。</p>
<pre><code>sh deploy.sh</code></pre>
<p>这样一个个人网页就算基本搭建好啦。</p>
<p>参考文档：</p>
<ul>
<li><a href="https://segmentfault.com/a/1190000017986794">超详细Hexo+Github博客搭建技术</a></li>
<li><a href="https://www.cxyxiaowu.com/6407.html">超全面！如何用 GitHub 从零开始搭建一个博客 ？</a></li>
</ul>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>mac访达Finder中文件绝对路径怎么找</title>
    <url>/2020/09/07/mac-path/</url>
    <content><![CDATA[<p>最方便快捷的方式就是直接点击想知道路径的文件，然后按 option-command-c 就能自动复制到剪贴板啦，超easy！</p>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 numbers 单元格内换行？</title>
    <url>/2020/09/07/numbers-return/</url>
    <content><![CDATA[<p>通常我们都习惯在写文本的时候按回车（Enter）换行，但在numbers里，按了回车是会自动跳到下一格的，那么如何解决这个问题？</p>
<p>用 <strong>option+Enter</strong> 就行啦！</p>
<hr>
<h2 id="Example小栗子："><a href="#Example小栗子：" class="headerlink" title="Example小栗子："></a>Example小栗子：</h2><p>现在我有文本如下：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiajmqwqnj30xc0c1aad.jpg" alt="9808904-94c37e422ac7dfe1."></p>
<p>可我不想说自己傻，所以想获得酱紫的效果：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiajuhojoj30xc07bq30.jpg" alt="9808904-49be64714c4f3411."></p>
<p>于是我按option+Enter:</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiajzbr1fg30pb0kcgmm.gif" alt="9808904-a9435cc4ed1b7815"></p>
<p>Perfect！</p>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
        <tag>numbers</tag>
      </tags>
  </entry>
  <entry>
    <title>如何直接在浏览器网页上高亮文本内容？(DIIGO)</title>
    <url>/2020/09/07/chrome-highlight-2/</url>
    <content><![CDATA[<p>之前我介绍了我比较喜欢的MarkUp 但后来发现Diigo功能更齐全 于是就想也写个Diigo版的 就酱 开始啦～</p>
<p>Diigo是一款chrome插件 可以在网页上高亮文本、进行笔记整理等。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>点击Diigo拓展进行安装 然后进行注册/登陆</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibsq61mzg30xc0h4dzp.gif" alt="9808904-89a822a3a30c9b9f"></p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>▷高亮 方法1：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibsqzou2g30xc0h4wg3.gif" alt="9808904-ab84e97db37bf854"></p>
<p>▷整理高亮内容：</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibsucnb9g30xc0h4q7j.gif" alt="9808904-caaf8c575a8b6e02"></p>
<p>▷视频截图&amp;整理</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibsyhai9g30xc0h4qv5.gif" alt="9808904-ac873d03b137beb8"></p>
<p>▷高亮 方法2</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibsyyf0ag30xc0h4wg3.gif" alt="9808904-6714a76c289b63ae"></p>
<p>▷在文本旁添加笔记</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibt0xaiwg30xc0h475h.gif" alt="9808904-75a0a28e231ebeef"></p>
<p>▷在网页上添加笔记</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibt3mdxbg30xc0h4dig.gif" alt="9808904-012f92c3f27acf22"></p>
<p>▷复制高亮内容</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibt5uk23g30xc0h4goh.gif" alt="9808904-c69e2dced99ea28b"></p>
<p>▷ diigo会自动将高亮过的网页存储在个人的DIigo里以供之后使用 可以添加标签tag以便以后整理使用 也可以删除（删除会自动删除所有高亮内容）</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibta9mdmg30xc0h4q77.gif" alt="9808904-e44a1749895b6fcc"></p>
<p>▷ 删除笔记</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibtdx29hg30xc0h475a.gif" alt="9808904-42eb60e0dcf363ce"></p>
<p>▷ 删除高亮</p>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giibti1a45g30xc0h4q3u.gif" alt="9808904-1dd8c563005beaff"></p>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 pages 里快速复制格式/格式刷？</title>
    <url>/2020/09/07/pages-formatting/</url>
    <content><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>快捷键：</p>
<ul>
<li><p>opt+command+c 复制格式</p>
</li>
<li><p>opt+command+v 粘贴格式</p>
</li>
</ul>
<p>常规方法：</p>
<ul>
<li>pages标签栏-格式-拷贝样式/粘贴样式</li>
</ul>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiao3q6cvj30ti0m40tz.jpg" alt="9808904-778c5800c618cf4c"></p>
<h1 id="小栗子"><a href="#小栗子" class="headerlink" title="小栗子"></a>小栗子</h1><p>1.0版：<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiaoc2qskg30sf0kbwhv.gif" alt="9808904-d6799f3140157c59"></p>
<p>2.0版<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giiaovee63g30sf0kbabl.gif" alt="9808904-4812c80c61f8814c"></p>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>pages</tag>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>Pages如何快速无格式粘贴粘贴</title>
    <url>/2020/09/07/pages-paste/</url>
    <content><![CDATA[<p>很多时候我们复制的文本都是带有格式的 可我们又不需要 粘贴过来再要改又好麻烦 那怎么破呢？</p>
<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><ol>
<li><p>标签栏-编辑-粘贴并匹配样式</p>
</li>
<li><p>快捷键：shift+option+command+v</p>
</li>
</ol>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicesxtguj30xc0hqgmy.jpg" alt="9808904-d0bc2014ff4d9869"></p>
<h1 id="小栗子"><a href="#小栗子" class="headerlink" title="小栗子"></a>小栗子</h1><p>1.0版：<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicfqj6ljg30s90kcwht.gif" alt="9808904-c940fa8e6cf85b3d"></p>
<p>2.0版：<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicftx0p8g30s90kcta8.gif" alt="9808904-d0d98444cda8b3a1"></p>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>pages</tag>
        <tag>小技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>如何无需重新渲染裁剪剪辑视频——使用Quicktime Player</title>
    <url>/2020/09/07/quickplayer-render/</url>
    <content><![CDATA[<ol>
<li>用Quicktime Player打开所需要剪辑的视频 标签栏-编辑-修剪（快捷键command+T)<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicjb4ltvj30ro0o8dh3.jpg" alt="9808904-4e3b9f42045188b1"></li>
</ol>
<ol start="2">
<li><p>滑动视图轴进行修剪（修建过程中将鼠标长时间停留在某个地方 可以打开该位置时间间隔更小的时间轴）</p>
</li>
<li><p>修建完毕后点击“修剪”进行保存 不会覆盖原文件 而是生成新视频</p>
</li>
</ol>
<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicjl16sfg30xc0htx6p.gif" alt="9808904-3f002fd35eb2c531"></p>
<ol start="4">
<li>点按关闭 命名&amp;选择存储位置</li>
</ol>
<hr>
<p>另外，Quicktime Player也支持将一个视频分离成多段进行重新整合：</p>
<ol>
<li><p>用Quicktime Player打开所需要剪辑的视频 找到要被分离的点（注意：无法在视频开头分离）</p>
</li>
<li><p>标签栏-编辑-分离剪辑（快捷键command+Y)<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicjlnjjvj30o80nugn8.jpg" alt="9808904-5fd1bc0d45e64fac"></p>
</li>
<li><p>滑动各段进行挪移<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giicjs73feg30xc0ionpd.gif" alt="9808904-aff0080167c8c7d1"></p>
</li>
<li><p>修建完毕后点击“修剪”进行保存 不会覆盖原文件 而是生成新视频</p>
</li>
<li><p>点按关闭 命名&amp;选择存储位置</p>
</li>
</ol>
]]></content>
      <categories>
        <category>鼓捣电脑</category>
      </categories>
      <tags>
        <tag>小技巧</tag>
        <tag>视频</tag>
      </tags>
  </entry>
</search>
